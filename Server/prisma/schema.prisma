generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Device {
    id           String       @id @default(cuid())
    deviceName   String
    deviceIP     String       @unique
    status       String       // 예: "Online", "Offline"
    lastChecked  DateTime
    ports        Port[]
    trafficStats TrafficStat[]
    events       Event[]
}

model Port {
    id          String   @id @default(cuid())
    portNumber  Int
    portStatus  String   // 예: "Up", "Down"
    errorCount  Int
    lastChecked DateTime @default(now())
    deviceId    String
    device      Device   @relation(fields: [deviceId], references: [id])
    trafficStats TrafficStat[]
}

model TrafficStat {
    id               String   @id @default(cuid())
    timestamp        DateTime
    inboundTraffic   BigInt   // Int에서 BigInt로 변경
    outboundTraffic  BigInt   // Int에서 BigInt로 변경
    portId           String
    port             Port     @relation(fields: [portId], references: [id])
    deviceId         String
    device           Device   @relation(fields: [deviceId], references: [id])
}

model Event {
    id        String   @id @default(cuid())
    eventType String   // Normal, Warning, Error 등
    severity  String   // Low, Medium, High 등
    message   String   @db.Text  // VARCHAR 대신 TEXT 타입 사용
    timestamp DateTime
    deviceId  String
    device    Device   @relation(fields: [deviceId], references: [id])
}
